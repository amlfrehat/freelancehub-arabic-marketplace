{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nconst locales = ['en', 'ar', 'he']\nconst defaultLocale = 'en'\n\nfunction getLocale(request: NextRequest): string {\n  // Check if there is any supported locale in the pathname\n  const pathname = request.nextUrl.pathname\n  const pathnameIsMissingLocale = locales.every(\n    (locale) => !pathname.startsWith(`/${locale}/`) && pathname !== `/${locale}`\n  )\n\n  // Redirect if there is no locale\n  if (pathnameIsMissingLocale) {\n    // Try to get locale from Accept-Language header\n    const acceptLanguage = request.headers.get('accept-language')\n    let locale = defaultLocale\n\n    if (acceptLanguage) {\n      const preferredLocale = acceptLanguage\n        .split(',')[0]\n        .split('-')[0]\n        .toLowerCase()\n      \n      if (locales.includes(preferredLocale)) {\n        locale = preferredLocale\n      }\n    }\n\n    return locale\n  }\n\n  return defaultLocale\n}\n\nexport function middleware(request: NextRequest) {\n  const pathname = request.nextUrl.pathname\n  const pathnameIsMissingLocale = locales.every(\n    (locale) => !pathname.startsWith(`/${locale}/`) && pathname !== `/${locale}`\n  )\n\n  // Redirect if there is no locale\n  if (pathnameIsMissingLocale) {\n    const locale = getLocale(request)\n    return NextResponse.redirect(\n      new URL(`/${locale}${pathname}`, request.url)\n    )\n  }\n}\n\nexport const config = {\n  matcher: [\n    // Skip all internal paths (_next)\n    '/((?!_next|api|favicon.ico).*)',\n    // Optional: only run on root (/) URL\n    // '/'\n  ],\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,UAAU;IAAC;IAAM;IAAM;CAAK;AAClC,MAAM,gBAAgB;AAEtB,SAAS,UAAU,OAAoB;IACrC,yDAAyD;IACzD,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IACzC,MAAM,0BAA0B,QAAQ,KAAK,CAC3C,CAAC,SAAW,CAAC,SAAS,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,EAAE,QAAQ;IAG9E,iCAAiC;IACjC,IAAI,yBAAyB;QAC3B,gDAAgD;QAChD,MAAM,iBAAiB,QAAQ,OAAO,CAAC,GAAG,CAAC;QAC3C,IAAI,SAAS;QAEb,IAAI,gBAAgB;YAClB,MAAM,kBAAkB,eACrB,KAAK,CAAC,IAAI,CAAC,EAAE,CACb,KAAK,CAAC,IAAI,CAAC,EAAE,CACb,WAAW;YAEd,IAAI,QAAQ,QAAQ,CAAC,kBAAkB;gBACrC,SAAS;YACX;QACF;QAEA,OAAO;IACT;IAEA,OAAO;AACT;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IACzC,MAAM,0BAA0B,QAAQ,KAAK,CAC3C,CAAC,SAAW,CAAC,SAAS,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,EAAE,QAAQ;IAG9E,iCAAiC;IACjC,IAAI,yBAAyB;QAC3B,MAAM,SAAS,UAAU;QACzB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAC1B,IAAI,IAAI,CAAC,CAAC,EAAE,SAAS,UAAU,EAAE,QAAQ,GAAG;IAEhD;AACF;AAEO,MAAM,SAAS;IACpB,SAAS;QACP,kCAAkC;QAClC;KAGD;AACH"}}]
}